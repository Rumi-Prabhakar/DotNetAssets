// <auto-generated />
using System;
using DNA.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DNA.Repository.Migrations
{
    [DbContext(typeof(DotNetAssetsContext))]
    partial class DotNetAssetsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DNA.Repository.Entities.DevelopmentIssue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("IssueClassificationId")
                        .HasColumnType("int");

                    b.Property<string>("IssueTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ResolutionDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("ResolutionDuration")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("Severity")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IssueClassificationId");

                    b.HasIndex("Severity");

                    b.HasIndex("StatusId");

                    b.ToTable("DevelopmentIssues");
                });

            modelBuilder.Entity("DNA.Repository.Entities.IssueAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AttachmentId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("AttachmentTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("IssueId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttachmentTypeId");

                    b.HasIndex("IssueId");

                    b.ToTable("IssueAttachment", (string)null);
                });

            modelBuilder.Entity("DNA.Repository.Entities.IssueAttachmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AttachmentType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("IssueAttachmentType", (string)null);
                });

            modelBuilder.Entity("DNA.Repository.Entities.IssueClassification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("IssueClassification", (string)null);
                });

            modelBuilder.Entity("DNA.Repository.Entities.IssueDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssueDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IssueId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IssueId");

                    b.ToTable("IssueDetail", (string)null);
                });

            modelBuilder.Entity("DNA.Repository.Entities.IssueResolution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfPost")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PostedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostedById");

                    b.ToTable("IssueResolution");
                });

            modelBuilder.Entity("DNA.Repository.Entities.IssueSeverity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("IssueSeverity", (string)null);
                });

            modelBuilder.Entity("DNA.Repository.Entities.IssueStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("IssueStatus", (string)null);
                });

            modelBuilder.Entity("DNA.Repository.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateOfPost")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferredName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("DNA.Repository.Entities.DevelopmentIssue", b =>
                {
                    b.HasOne("DNA.Repository.Entities.IssueClassification", "IssueClassification")
                        .WithMany("DevelopmentIssues")
                        .HasForeignKey("IssueClassificationId")
                        .IsRequired()
                        .HasConstraintName("FK__Developme__Issue__34C8D9D1");

                    b.HasOne("DNA.Repository.Entities.IssueSeverity", "IssueSeverity")
                        .WithMany("DevelopmentIssues")
                        .HasForeignKey("Severity")
                        .IsRequired()
                        .HasConstraintName("FK__Developme__Sever__29572725");

                    b.HasOne("DNA.Repository.Entities.IssueStatus", "Status")
                        .WithMany("DevelopmentIssues")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK__Developme__Statu__286302EC");

                    b.Navigation("IssueClassification");

                    b.Navigation("IssueSeverity");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("DNA.Repository.Entities.IssueAttachment", b =>
                {
                    b.HasOne("DNA.Repository.Entities.IssueAttachmentType", "AttachmentType")
                        .WithMany("IssueAttachments")
                        .HasForeignKey("AttachmentTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__IssueAtta__Attac__31EC6D26");

                    b.HasOne("DNA.Repository.Entities.DevelopmentIssue", "Issue")
                        .WithMany("IssueAttachments")
                        .HasForeignKey("IssueId")
                        .IsRequired()
                        .HasConstraintName("FK__IssueAtta__Issue__30F848ED");

                    b.Navigation("AttachmentType");

                    b.Navigation("Issue");
                });

            modelBuilder.Entity("DNA.Repository.Entities.IssueDetail", b =>
                {
                    b.HasOne("DNA.Repository.Entities.DevelopmentIssue", "Issue")
                        .WithMany("IssueDetails")
                        .HasForeignKey("IssueId")
                        .IsRequired()
                        .HasConstraintName("FK__IssueDeta__Issue__2C3393D0");

                    b.Navigation("Issue");
                });

            modelBuilder.Entity("DNA.Repository.Entities.IssueResolution", b =>
                {
                    b.HasOne("DNA.Repository.Entities.User", "PostedBy")
                        .WithMany()
                        .HasForeignKey("PostedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PostedBy");
                });

            modelBuilder.Entity("DNA.Repository.Entities.DevelopmentIssue", b =>
                {
                    b.Navigation("IssueAttachments");

                    b.Navigation("IssueDetails");
                });

            modelBuilder.Entity("DNA.Repository.Entities.IssueAttachmentType", b =>
                {
                    b.Navigation("IssueAttachments");
                });

            modelBuilder.Entity("DNA.Repository.Entities.IssueClassification", b =>
                {
                    b.Navigation("DevelopmentIssues");
                });

            modelBuilder.Entity("DNA.Repository.Entities.IssueSeverity", b =>
                {
                    b.Navigation("DevelopmentIssues");
                });

            modelBuilder.Entity("DNA.Repository.Entities.IssueStatus", b =>
                {
                    b.Navigation("DevelopmentIssues");
                });
#pragma warning restore 612, 618
        }
    }
}
